window.dom={create(string){const container=document.createElement("template");return container.innerHTML=string.trim(),container.content.firstChild},after(node,node2){node.parentNode.insertBefore(node2,node.nextSibling)},before(node,node2){node.parentNode.insertBefore(node2,node)},append(parent,node){parent.appendChild(node)},wrap(node,parent){dom.before(node,parent),dom.append(parent,node)},remove:node=>(node.parentNode.removeChild(node),node),empty(node){const{childNodes:childNodes}=node,array=[];let x=node.firstChild;for(;x;)array.push(dom.remove(node.firstChild)),x=node.firstChild;return array},attr(node,name,value){if(3===arguments.length)node.setAttribute(name,value);else if(2===arguments.length)return node.getAttribute(name)},text(node,string){if(2===arguments.length)"innerText"in node?node.innerText=string:node.textContext=string;else if(1===arguments.length)return"innerText"in node?node.innerText:node.textContext},html(node,string){if(2===arguments.length)node.innerHTML=string;else if(1===arguments.length)return node.innerHTML},style(node,name,value){if(3===arguments.length)node.style[name]=value;else if(2===arguments.length){if("string"==typeof name)return node.style[name];if(name instanceof Object){const object=name;for(let key in object)node.style[key]=object[key]}}},class:{add(node,className){node.classList.add(className)},remove(node,className){node.classList.remove(className)},has:(node,className)=>node.classList.contains(className)},on(node,eventName,fn){node.addEventListener(eventName,fn)},off(node,eventName,fn){node.removeEventListener(eventName,fn)},find:(selector,scope)=>(scope||document).querySelectorAll(selector),parent:node=>node.parentNode,children:node=>node.children,siblings:node=>Array.from(node.parentNode.children).filter(n=>n!==node),next(node){let x=node.nextSibling;for(;x&&3===x.nodeType;)x=x.nextSibling;return x},previous(node){let x=node.previousSibling;for(;x&&3===x.nodeType;)x=x.previousSibling;return x},each(nodeList,fn){for(let i=0;i<nodeList.length;i++)fn.call(null,nodeList[i])},index(node){const list=dom.children(node.parentNode);let i;for(i=0;i<list.length&&list[i]!==node;i++);return i+1}};